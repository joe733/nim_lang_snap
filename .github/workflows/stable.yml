name: stable
on:
  push:
    branches:
    - master
  schedule:
   - cron: 0 4 * * *
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: sirredbeard/snap-build
    steps:
    - uses: actions/checkout@v1
    - name: Configure snapcraft.yaml
      run: |
        sudo apt-get update
        sudo apt-get install python3-pip python3-setuptools python3-wheel -y
        sudo useradd -m temp
        sudo chown -R temp /home/temp
        su temp -c "pip3 install lastversion"
        VERSION=$(su temp -c "~/.local/bin/lastversion nim-lang/Nim")
        RELEASEURL=$(su temp -c "~/.local/bin/lastversion --assets nim-lang/Nim")
        sed -i "s/VERSION/$VERSION/g" "stable/snap/snapcraft.yaml"
        sed -i "s*RELEASEURL*$RELEASEURL*g" "stable/snap/snapcraft.yaml"
    - name: Build snap on Launchpad using remote-build
      env:
        REMOTE_BUILD_CREDENTIALS: ${{ secrets.REMOTE_BUILD_CREDENTIALS }}
      run: |        
        sudo apt-get install python3-pip python3-setuptools python3-wheel -y
        mkdir -p $HOME/.local/share/snapcraft/provider/launchpad/
        echo ${REMOTE_BUILD_CREDENTIALS} | base64 --decode --ignore-garbage > $HOME/.local/share/snapcraft/provider/launchpad/credentials
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        cd stable
        snapcraft remote-build --launchpad-accept-public-upload --build-on=ppc64el,arm64,armhf,amd64,i386
    - name: Upload snap to Snap Store
      env:
        SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
      run: |
        cd stable
        mkdir .snapcraft
        echo ${SNAPCRAFT_LOGIN_FILE} | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
        ARCHS="ppc64el arm64 armhf amd64 i386"
        for ARCH in ${ARCHS}; do
          snapcraft upload --release=stable *${ARCH}.snap
        done